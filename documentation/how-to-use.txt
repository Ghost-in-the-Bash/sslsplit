How to Use SSLsplit
Lasted updated: 11:32 2018-07-30
--------------------------------------------------------------------------------
Reference: https://blog.heckel.xyz/2013/08/04/use-sslsplit-to-transparently-sniff-tls-ssl-connections/

For this example, I used two Ubuntu virtual machines on the same local network,
and SSLsplit version 0.5.3. Download SSLsplit onto the machine acting as the
server/router, either by cloning the GitHub repository (recommended) at

  https://github.com/ghost-in-the-bash/sslsplit (mine), or
  https://github.com/droe/sslsplit.git (original),

or by typing the following:

  wget http://mirror.roe.ch/rel/sslsplit/sslsplit-0.5.3.tar.bz2
  bunzip2 sslsplit-0.5.3.tar.bz2
  tar xvf sslsplit-0.5.3.tar

And of course, be sure to use

  make clean
  make

inside the sslsplit directory before running SSLsplit.


Method 0: SSLsplit on the Default Gateway
--------------------------------------------------------------------------------
This is the simplist way to use SSLsplit. The machine running SSLsplit acts as a
router (and man-in-the-middle) for the client.

1. Create a Certificate Authority certificate (if one isn't already included):

   openssl genrsa -out ca.key 4096
   openssl req -new -x509 -days 1826 -key ca.key -out ca.crt

2. Configure the router:

  a. Enable IP forwarding:

     sudo sysctl -w net.ipv4.ip_forward=1

  b. Delete all current NAT rules:

     sudo iptables -t nat -F

  c. Configure NAT to redirect packets to ports that SSLsplit listens to. In
     this example, we only care about HTTP/HTTPS traffic:

     iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
     iptables -t nat -A PREROUTING -p tcp --dport 443-j REDIRECT --to-ports 8443

3. Run SSLsplit on the router (all in one line):

   ./sslsplit -D -l connections.log -j /tmp/sslsplit/ -S /tmp/sslsplit/logdir/ -k ca.key -c ca.cer ssl 0.0.0.0 8443 tcp 0.0.0.0 8080

5. Configure the client's web browser (if the CA cert is not already installed):

   a. Copy the ca.crt from the router's sslsplit directory over to the client
   b. Open up Firefox and go to Preferences > Privacy & Security >
      View Certificates > Authorities > Import, and then select the ca.crt

4. Configure the client's default gateway:

   a. Add a new default gateway (use the router's IP address):

      sudo route add default gw 10.19.89.11

   b. Make sure the router works. Try to ping an address outside the network.
   c. Delete the client's original default gateway:

      sudo route del default gw 10.19.89.254

Now you should be able to open up Firefox and go to any website. Click on the
secure HTTPS lock icon in the URL bar to display the certificate. It should be
verified by the CA in the router's sslsplit directory. On the router, you can
view the connections.log in the sslsplit directory, and all decrypted web data
in the log files located in /tmp/sslsplit/logdir/.
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------
