How to Use SSLsplit
Lasted updated: 2018-08-23
--------------------------------------------------------------------------------
Reference: https://blog.heckel.xyz/2013/08/04/use-sslsplit-to-transparently-sniff-tls-ssl-connections/

For this example, I used SSLsplit version 0.5.3.

Method 0: SSLsplit on an Ubuntu machine acting as the default gateway (router)
--------------------------------------------------------------------------------
This is the simplist way to use SSLsplit. The machine running SSLsplit acts as a
router (and man-in-the-middle) for the client.

Download SSLsplit onto the Ubuntu machine acting as the router by cloning the
GitHub repository at

  https://github.com/ghost-in-the-bash/sslsplit-netgrok

Next, install libevent and libssl so sslsplit can handle large numbers of ssl
connections:

  sudo apt-get install libssl-dev libevent-dev

1. Generate a Certificate Authority certificate. Eventually, this step will be
   automated on the OpenWRT router to generate a NetGrok CA key and certificate
   if they are not present. Generate a key and certificate in the
   sslsplit-netgrok/ directory:

   openssl genrsa -out netgrok.key 4096
   openssl req -new -x509 -days 1826 -key netgrok.key -out netgrok.crt

   Country:             US
   State:               New York
   City:                West Point
   Organization:        NetGrok CA
   Organizational Unit: NetGrok II
   Common Name:         NetGrok
   Email Address:

2. Configure the Ubuntu machine acting as the router:

  a. Enable IP forwarding:

     sudo sysctl -w net.ipv4.ip_forward=1

  b. Delete all current NAT rules, just in case:

     sudo iptables -t nat -F

  c. Configure NAT to redirect packets to ports that SSLsplit listens to:

     sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080
     sudo iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-ports 8443
     sudo iptables -t nat -A PREROUTING -p tcp --dport 465 -j REDIRECT --to-ports 8443
     sudo iptables -t nat -A PREROUTING -p tcp --dport 587 -j REDIRECT --to-ports 8443
     sudo iptables -t nat -A PREROUTING -p tcp --dport 993 -j REDIRECT --to-ports 8443
     sudo iptables -t nat -A PREROUTING -p tcp --dport 5222 -j REDIRECT --to-ports 8080

     These rules redirect HTTP, HTTPS, SMTP, IMAP, and WhatsApp packets.

3. Run SSLsplit from the sslsplit-netgrok/src/ directory on the Ubuntu machine
   acting as the router:

   make clean
   make
   ./sslsplit -S ../ -k ../netgrok.key -c ../netgrok.crt ssl 0.0.0.0 8443 tcp 0.0.0.0 8080

   The -S option normally would write the decrypted content of connections to
   log files. However, logger.c has been modified to not make logs at all, and
   log.c has been modified to direct content to netgrok.c. The netgrok()
   function dumps connections in JSON format to standard output.

5. Configure the client's web browser (if the CA cert is not already installed):

   a. Copy the netgrok.crt onto the client machine
   b. Open up Firefox and go to Preferences > Privacy & Security >
      View Certificates > Authorities > Import, and then select the netgrok.crt

4. Configure the client's default gateway:

   a. Add a new default gateway (use the IP address of the Ubuntu machine acting
      as the router):

      sudo route add default gw <router_ip_address>

   b. Delete the client's original default gateway:

      sudo route del default gw <gateway_ip_address>

Now you should be able to open up Firefox and go to any website. Click on the
secure HTTPS lock icon in the URL bar to display the certificate. It should be
verified by the NetGrok CA.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
